# modified from https://github.com/simonmichael/hledger/blob/master/.github/workflows/mac.yml

name: CI (macOS)

# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestbranchestags
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request: 
    types: [opened, reopened]

jobs:
  build:
    runs-on: macos-latest
    steps:

    - name: üì• Checkout repository
      uses: actions/checkout@v2

    # Make sure the @v0.5.4 matches the current version of the
    # action 
    - uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.KEELUNG_CI }}

    # things to be cached/restored:

    - name: üíæ Cache stack global package db
      id:   stack-global
      uses: actions/cache@v2
      with:
        path: ~/.stack
        key: ${{ runner.os }}-stack-global-after20210110-${{ hashFiles('**.yaml') }}
        restore-keys: |
             ${{ runner.os }}-stack-global-after202110110
    - name: üíæ Cache stack-installed programs in ~/.local/bin
      id:   stack-programs
      uses: actions/cache@v2
      with:
        path: ~/.local/bin
        key: ${{ runner.os }}-stack-programs-${{ hashFiles('**.yaml') }}
        restore-keys: |
             ${{ runner.os }}-stack-programs
    - name: üíæ Cache .stack-work
      uses: actions/cache@v2
      with:
        path: .stack-work
        key: ${{ runner.os }}-stack-work-${{ hashFiles('**.yaml') }}
        restore-keys: |
             ${{ runner.os }}-stack-work

    - name: üíæ Cache keelung-compiler/.stack-work
      uses: actions/cache@v2
      with:
        path: keelung-compiler/.stack-work
        key: ${{ runner.os }}-keelung-compiler-stack-work-${{ hashFiles('keelung-compiler/package.yaml') }}
        restore-keys: |
             ${{ runner.os }}-keelung-compiler-stack-work

    # actions:

    - name: ‚è¨ Install stack
      run: |
        mkdir -p ~/.local/bin
        export PATH=~/.local/bin:$PATH        
        # brew install gnu-tar; curl -sL https://get.haskellstack.org/stable/osx-x86_64.tar.gz | gtar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'; chmod a+x ~/.local/bin/stack
        if [[ ! -x ~/.local/bin/stack ]]; then brew install gnu-tar; curl -sL https://get.haskellstack.org/stable/osx-x86_64.tar.gz | gtar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'; chmod a+x ~/.local/bin/stack; fi
        stack --version

    - name: ‚è¨ Install GHC
      run: |
        stack setup --install-ghc

    - name: ‚è¨ Install dependencies
      run: |
        stack build --only-dependencies

    - name: üî® Build and run tests
      run: |
        stack test

    - name: üì¶ Compress files
      id: zip
      if: startsWith(github.ref, 'refs/tags/') # so that only commits with a git tag would upload artifacts
      run: |
        # locate the executable 
        executable=$(find $(stack path --local-install-root)/bin -name "keelungc")

        # make a temporary directory for compresssing
        mkdir zip
        cp $executable zip/
        
        # compress
        cd zip 
        zip -r keelungc-macos.zip *
        cd .. 
        mv zip/keelungc-macos.zip .

    - name: üö¢ Release Artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/') # so that only commits with a git tag would upload artifacts
      with:
        files: keelungc-macos.zip
        repository: btq-ag/keelung
        token: ${{ secrets.KEELUNG_RELEASE }}
        draft: true
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
