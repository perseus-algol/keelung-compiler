# modified from https://github.com/simonmichael/hledger/blob/master/.github/workflows/windows.yml

name: CI (Windows)

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest
    steps:

    - name: üì• Checkout repository
      uses: actions/checkout@v2

    # Make sure the @v0.5.4 matches the current version of the
    # action 
    - uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.KEELUNG_CI }}

    # things to be cached/restored:

    - name: üíæ Cache stack global package db
      id:   stack-global-package-db
      uses: actions/cache@v2
      with:
        path: C:\Users\runneradmin\AppData\Roaming\stack\
        key: ${{ runner.os }}-appdata-roaming-stack-${{ hashFiles('**.yaml') }}
        restore-keys: |
             ${{ runner.os }}-appdata-roaming-stack
    - name: üíæ Cache stack programs dir   # ghc, ghc-included packages and their haddocks, mingw, msys2
      id:   stack-programs-dir
      uses: actions/cache@v2
      with:
        path: C:\Users\runneradmin\AppData\Local\Programs\stack\
        # which files signal a change in stack's global db ?
        # **.yaml includes */package.yaml and stack.yaml* (too many), and hopefully no other changing yamls
        key: ${{ runner.os }}-appdata-local-programs-stack-${{ hashFiles('**.yaml') }}
        restore-keys: |
             ${{ runner.os }}-appdata-local-programs-stack
    - name: üíæ Cache .stack-work
      uses: actions/cache@v2
      with:
        path: .stack-work
        key: ${{ runner.os }}-stack-work-${{ hashFiles('**.yaml') }}
        restore-keys: |
             ${{ runner.os }}-stack-work
    - name: üíæ Cache keelung-compiler/.stack-work
      uses: actions/cache@v2
      with:
        path: keelung-compiler/.stack-work
        key: ${{ runner.os }}-keelung-compiler-stack-work-${{ hashFiles('keelung-compiler/package.yaml') }}
        restore-keys: |
             ${{ runner.os }}-keelung-compiler-stack-work

    # actions 
    
    - name: ‚è¨ Install stack
      #if: steps.stack-programs-dir.outputs.cache-hit != 'true'
      # this step is needed to get stack.exe into PATH, for now
      run: |
        curl -sL https://get.haskellstack.org/stable/windows-x86_64.zip -o stack.zip
        7z x stack.zip stack.exe
        which stack
        stack --version
        which ./stack
        ./stack --version
      # must avoid GHC versions broken on windows such as 8.8.3 with https://gitlab.haskell.org/ghc/ghc/issues/17926
      # current default stack.yaml uses GHC 8.8.4 which hopefully is ok

    - name: ‚è¨ Install GHC
      # if: steps.stack-programs-dir.outputs.cache-hit != 'true'
      # set PATH=C:\Users\runneradmin\AppData\Local\Programs\stack\local\bin;%PATH%
      run: |
        ./stack --no-terminal setup --install-ghc

    - name: üì∏ Build Snapshot
      run: |
        ./stack build --no-terminal --only-snapshot -j1

    - name: üß∞ Build Dependencies
      run: |
        ./stack build --no-terminal --only-dependencies

    - name: üî® Build and run tests
      run: |
        ./stack test

    # artifacts:
    
    - name: üì¶ Compress executable and data files
      if: startsWith(github.ref, 'refs/tags/') # so that only commits with a git tag would upload artifacts
      run: |
        # locate the executable 
        $local = (stack path --local-install-root)
        $executable = (ls $local\bin *keelungc.exe* -Recurse -File).FullName

        # make a temporary directory for compresssing
        mkdir zip
        cp $executable zip/

        # compress
        cd zip 
        Compress-Archive * keelungc-windows.zip
        cd .. 
        mv zip/keelungc-windows.zip .
             
    - name: üö¢ Release Artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/') # so that only commits with a git tag would upload artifacts
      with:
        files: keelungc-windows.zip
        draft: true
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}